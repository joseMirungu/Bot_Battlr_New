{"ast":null,"code":"var _jsxFileName = \"/home/jose/Downloads/Challenge-2-Bot-Battlr/code-challenge/src/components/BotsPage.js\",\n  _s = $RefreshSig$();\n// src/components/BotsPage.js\nimport React, { useState } from 'react';\nimport BotCollection from './BotCollection';\nimport BotSpecs from './BotSpecs';\nimport YourBotArmy from './YourBotArmy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialBots = [\n// Example bot data\n{\n  id: 1,\n  name: 'Bot1',\n  description: 'Description of Bot1',\n  avatar_url: '...',\n  catchphrase: '...',\n  bot_class: 'Assault',\n  health: 100,\n  damage: 50,\n  armor: 30\n}, {\n  id: 2,\n  name: 'Bot2',\n  description: 'Description of Bot2',\n  avatar_url: '...',\n  catchphrase: '...',\n  bot_class: 'Defender',\n  health: 150,\n  damage: 20,\n  armor: 60\n}];\nfunction BotsPage() {\n  _s();\n  const [bots, setBots] = useState(initialBots);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const [yourBots, setYourBots] = useState([]);\n  const handleBotClick = bot => {\n    setSelectedBot(bot);\n  };\n  const handleAddToArmy = bot => {\n    setYourBots([...yourBots, bot]);\n    setBots(bots.filter(b => b.id !== bot.id));\n    setSelectedBot(null);\n  };\n  const handleBack = () => {\n    setSelectedBot(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {\n      bots: yourBots\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), selectedBot ? /*#__PURE__*/_jsxDEV(BotSpecs, {\n      bot: selectedBot,\n      onAddToArmy: handleAddToArmy,\n      onBack: handleBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      onBotClick: handleBotClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(BotsPage, \"2hT3YDFpHlUq8dJdAKWuS6Tng+A=\");\n_c = BotsPage;\nexport default BotsPage;\nvar _c;\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"names":["React","useState","BotCollection","BotSpecs","YourBotArmy","jsxDEV","_jsxDEV","initialBots","id","name","description","avatar_url","catchphrase","bot_class","health","damage","armor","BotsPage","_s","bots","setBots","selectedBot","setSelectedBot","yourBots","setYourBots","handleBotClick","bot","handleAddToArmy","filter","b","handleBack","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddToArmy","onBack","onBotClick","_c","$RefreshReg$"],"sources":["/home/jose/Downloads/Challenge-2-Bot-Battlr/code-challenge/src/components/BotsPage.js"],"sourcesContent":["// src/components/BotsPage.js\nimport React, { useState } from 'react';\nimport BotCollection from './BotCollection';\nimport BotSpecs from './BotSpecs';\nimport YourBotArmy from './YourBotArmy';\n\nconst initialBots = [\n  // Example bot data\n  { id: 1, name: 'Bot1', description: 'Description of Bot1', avatar_url: '...', catchphrase: '...', bot_class: 'Assault', health: 100, damage: 50, armor: 30 },\n  { id: 2, name: 'Bot2', description: 'Description of Bot2', avatar_url: '...', catchphrase: '...', bot_class: 'Defender', health: 150, damage: 20, armor: 60 }\n];\n\nfunction BotsPage() {\n  const [bots, setBots] = useState(initialBots);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const [yourBots, setYourBots] = useState([]);\n\n  const handleBotClick = (bot) => {\n    setSelectedBot(bot);\n  };\n\n  const handleAddToArmy = (bot) => {\n    setYourBots([...yourBots, bot]);\n    setBots(bots.filter(b => b.id !== bot.id));\n    setSelectedBot(null);\n  };\n\n  const handleBack = () => {\n    setSelectedBot(null);\n  };\n\n  return (\n    <div>\n      <YourBotArmy bots={yourBots} />\n      {selectedBot ? (\n        <BotSpecs bot={selectedBot} onAddToArmy={handleAddToArmy} onBack={handleBack} />\n      ) : (\n        <BotCollection bots={bots} onBotClick={handleBotClick} />\n      )}\n    </div>\n  );\n}\n\nexport default BotsPage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAG;AAClB;AACA;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,MAAM;EAAEC,WAAW,EAAE,qBAAqB;EAAEC,UAAU,EAAE,KAAK;EAAEC,WAAW,EAAE,KAAK;EAAEC,SAAS,EAAE,SAAS;EAAEC,MAAM,EAAE,GAAG;EAAEC,MAAM,EAAE,EAAE;EAAEC,KAAK,EAAE;AAAG,CAAC,EAC5J;EAAER,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,MAAM;EAAEC,WAAW,EAAE,qBAAqB;EAAEC,UAAU,EAAE,KAAK;EAAEC,WAAW,EAAE,KAAK;EAAEC,SAAS,EAAE,UAAU;EAAEC,MAAM,EAAE,GAAG;EAAEC,MAAM,EAAE,EAAE;EAAEC,KAAK,EAAE;AAAG,CAAC,CAC9J;AAED,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAACM,WAAW,CAAC;EAC7C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMwB,cAAc,GAAIC,GAAG,IAAK;IAC9BJ,cAAc,CAACI,GAAG,CAAC;EACrB,CAAC;EAED,MAAMC,eAAe,GAAID,GAAG,IAAK;IAC/BF,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEG,GAAG,CAAC,CAAC;IAC/BN,OAAO,CAACD,IAAI,CAACS,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACrB,EAAE,KAAKkB,GAAG,CAAClB,EAAE,CAAC,CAAC;IAC1Cc,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACvBR,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,oBACEhB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA,CAACF,WAAW;MAACe,IAAI,EAAEI;IAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC9Bd,WAAW,gBACVf,OAAA,CAACH,QAAQ;MAACuB,GAAG,EAAEL,WAAY;MAACe,WAAW,EAAET,eAAgB;MAACU,MAAM,EAAEP;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEhF7B,OAAA,CAACJ,aAAa;MAACiB,IAAI,EAAEA,IAAK;MAACmB,UAAU,EAAEb;IAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACzD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACjB,EAAA,CA7BQD,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AA+BjB,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}