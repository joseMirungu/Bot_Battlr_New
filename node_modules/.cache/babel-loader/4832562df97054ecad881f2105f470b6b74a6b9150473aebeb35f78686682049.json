{"ast":null,"code":"var _jsxFileName = \"/home/jose/Downloads/Challenge-2-Bot-Battlr/code-challenge/src/components/BotsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\nimport BotSpecs from \"./BotSpecs\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction BotsPage() {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [selectedBot, setSelectedBot] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:8002/bots\").then(response => response.json()).then(data => setBots(data));\n  }, []);\n  const handleRemoveBot = botId => {\n    setBots(bots.filter(bot => bot.id !== botId));\n  };\n  const handleViewBot = bot => {\n    setSelectedBot(bot);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: selectedBot ? /*#__PURE__*/_jsxDEV(BotSpecs, {\n      bot: selectedBot,\n      onBack: () => setSelectedBot(null),\n      onEnlist: () => {\n        // Add to YourBotArmy logic here\n        setSelectedBot(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {\n        bots: bots.filter(bot => bot.isEnlisted),\n        onRemoveBot: handleRemoveBot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n        bots: bots,\n        onViewBot: handleViewBot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(BotsPage, \"mIKXZsE2JCkJe0h2pXd+w1ZONvg=\");\n_c = BotsPage;\nexport default BotsPage;\nvar _c;\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"names":["React","useState","useEffect","YourBotArmy","BotCollection","BotSpecs","jsxDEV","_jsxDEV","Fragment","_Fragment","BotsPage","_s","bots","setBots","selectedBot","setSelectedBot","fetch","then","response","json","data","handleRemoveBot","botId","filter","bot","id","handleViewBot","children","onBack","onEnlist","fileName","_jsxFileName","lineNumber","columnNumber","isEnlisted","onRemoveBot","onViewBot","_c","$RefreshReg$"],"sources":["/home/jose/Downloads/Challenge-2-Bot-Battlr/code-challenge/src/components/BotsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\nimport BotSpecs from \"./BotSpecs\";\n\nfunction BotsPage() {\n  const [bots, setBots] = useState([]);\n  const [selectedBot, setSelectedBot] = useState(null);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8002/bots\")\n      .then((response) => response.json())\n      .then((data) => setBots(data));\n  }, []);\n\n  const handleRemoveBot = (botId) => {\n    setBots(bots.filter((bot) => bot.id !== botId));\n  };\n\n  const handleViewBot = (bot) => {\n    setSelectedBot(bot);\n  };\n\n  return (\n    <div>\n      {selectedBot ? (\n        <BotSpecs\n          bot={selectedBot}\n          onBack={() => setSelectedBot(null)}\n          onEnlist={() => {\n            // Add to YourBotArmy logic here\n            setSelectedBot(null);\n          }}\n        />\n      ) : (\n        <>\n          <YourBotArmy bots={bots.filter((bot) => bot.isEnlisted)} onRemoveBot={handleRemoveBot} />\n          <BotCollection bots={bots} onViewBot={handleViewBot} />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default BotsPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACdc,KAAK,CAAC,4BAA4B,CAAC,CAChCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKP,OAAO,CAACO,IAAI,CAAC,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,eAAe,GAAIC,KAAK,IAAK;IACjCT,OAAO,CAACD,IAAI,CAACW,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKH,KAAK,CAAC,CAAC;EACjD,CAAC;EAED,MAAMI,aAAa,GAAIF,GAAG,IAAK;IAC7BT,cAAc,CAACS,GAAG,CAAC;EACrB,CAAC;EAED,oBACEjB,OAAA;IAAAoB,QAAA,EACGb,WAAW,gBACVP,OAAA,CAACF,QAAQ;MACPmB,GAAG,EAAEV,WAAY;MACjBc,MAAM,EAAEA,CAAA,KAAMb,cAAc,CAAC,IAAI,CAAE;MACnCc,QAAQ,EAAEA,CAAA,KAAM;QACd;QACAd,cAAc,CAAC,IAAI,CAAC;MACtB;IAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAEF1B,OAAA,CAAAE,SAAA;MAAAkB,QAAA,gBACEpB,OAAA,CAACJ,WAAW;QAACS,IAAI,EAAEA,IAAI,CAACW,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACU,UAAU,CAAE;QAACC,WAAW,EAAEd;MAAgB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzF1B,OAAA,CAACH,aAAa;QAACQ,IAAI,EAAEA,IAAK;QAACwB,SAAS,EAAEV;MAAc;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACvD;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACtB,EAAA,CArCQD,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAuCjB,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}