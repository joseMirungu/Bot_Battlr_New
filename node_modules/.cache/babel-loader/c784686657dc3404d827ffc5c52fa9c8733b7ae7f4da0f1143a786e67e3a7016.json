{"ast":null,"code":"var _jsxFileName = \"/home/jose/Downloads/Challenge-2-Bot-Battlr/code-challenge/src/components/BotCollection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport BotCard from \"./BotCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotCollection({\n  onEnlist,\n  onViewBot\n}) {\n  _s();\n  const [bots, setBots] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8002/bots\").then(response => response.json()).then(data => {\n      console.log(\"Fetched bots:\", data); // Debug log\n      setBots(data);\n    }).catch(error => console.error(\"Error fetching bots:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui four column grid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: bots.length > 0 ? bots.map(bot => /*#__PURE__*/_jsxDEV(BotCard, {\n        bot: bot,\n        onEnlist: onEnlist,\n        onViewBot: onViewBot\n      }, bot.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No bots available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this) // Display a message if no bots are found\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(BotCollection, \"HLWYdwhjlsHzdjlYtqtFyxxPKrE=\");\n_c = BotCollection;\nexport default BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["React","useEffect","useState","BotCard","jsxDEV","_jsxDEV","BotCollection","onEnlist","onViewBot","_s","bots","setBots","fetch","then","response","json","data","console","log","catch","error","className","children","length","map","bot","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jose/Downloads/Challenge-2-Bot-Battlr/code-challenge/src/components/BotCollection.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport BotCard from \"./BotCard\";\n\nfunction BotCollection({ onEnlist, onViewBot }) {\n  const [bots, setBots] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8002/bots\")\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"Fetched bots:\", data); // Debug log\n        setBots(data);\n      })\n      .catch(error => console.error(\"Error fetching bots:\", error));\n  }, []);\n\n  return (\n    <div className=\"ui four column grid\">\n      <div className=\"row\">\n        {bots.length > 0 ? (\n          bots.map(bot => (\n            <BotCard\n              key={bot.id}\n              bot={bot}\n              onEnlist={onEnlist}\n              onViewBot={onViewBot}\n            />\n          ))\n        ) : (\n          <p>No bots available</p> // Display a message if no bots are found\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default BotCollection;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,aAAaA,CAAC;EAAEC,QAAQ;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC9C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,4BAA4B,CAAC,CAChCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAAC,CAAC,CAAC;MACpCL,OAAO,CAACK,IAAI,CAAC;IACf,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA;IAAKgB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAClCjB,OAAA;MAAKgB,SAAS,EAAC,KAAK;MAAAC,QAAA,EACjBZ,IAAI,CAACa,MAAM,GAAG,CAAC,GACdb,IAAI,CAACc,GAAG,CAACC,GAAG,iBACVpB,OAAA,CAACF,OAAO;QAENsB,GAAG,EAAEA,GAAI;QACTlB,QAAQ,EAAEA,QAAS;QACnBC,SAAS,EAAEA;MAAU,GAHhBiB,GAAG,CAACC,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIZ,CACF,CAAC,gBAEFzB,OAAA;QAAAiB,QAAA,EAAG;MAAiB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,CAAC;IAC1B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrB,EAAA,CA/BQH,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AAiCtB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}