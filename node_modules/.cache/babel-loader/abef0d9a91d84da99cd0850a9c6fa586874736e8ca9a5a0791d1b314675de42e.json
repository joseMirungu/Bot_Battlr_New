{"ast":null,"code":"var _jsxFileName = \"/home/jose/Downloads/Challenge-2-Bot-Battlr/code-challenge/src/components/BotsPage.js\",\n  _s = $RefreshSig$();\n// src/components/BotsPage.js\nimport React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\nimport BotSpecs from \"./BotSpecs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotsPage() {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const [botArmy, setBotArmy] = useState([]);\n  useEffect(() => {\n    // Fetch or initialize bots data here\n    const initialBots = [{\n      id: 1,\n      name: \"Bot1\",\n      description: \"Description1\",\n      avatar_url: \"path/to/image1.jpg\",\n      catchphrase: \"Catchphrase1\",\n      bot_class: \"Assault\",\n      health: 100,\n      damage: 50,\n      armor: 10\n    }, {\n      id: 2,\n      name: \"Bot2\",\n      description: \"Description2\",\n      avatar_url: \"path/to/image2.jpg\",\n      catchphrase: \"Catchphrase2\",\n      bot_class: \"Defender\",\n      health: 150,\n      damage: 20,\n      armor: 30\n    }];\n    setBots(initialBots);\n  }, []);\n  const handleBotClick = bot => {\n    setSelectedBot(bot);\n  };\n  const handleEnlist = bot => {\n    setBotArmy([...botArmy, bot]);\n    setSelectedBot(null); // Optionally clear selected bot\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {\n      botArmy: botArmy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      onBotClick: handleBotClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), selectedBot && /*#__PURE__*/_jsxDEV(BotSpecs, {\n      bot: selectedBot,\n      onEnlist: handleEnlist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(BotsPage, \"6Qm/qG2LD2Iik+BesHut23P2jQU=\");\n_c = BotsPage;\nexport default BotsPage;\nvar _c;\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"names":["React","useState","useEffect","YourBotArmy","BotCollection","BotSpecs","jsxDEV","_jsxDEV","BotsPage","_s","bots","setBots","selectedBot","setSelectedBot","botArmy","setBotArmy","initialBots","id","name","description","avatar_url","catchphrase","bot_class","health","damage","armor","handleBotClick","bot","handleEnlist","children","fileName","_jsxFileName","lineNumber","columnNumber","onBotClick","onEnlist","_c","$RefreshReg$"],"sources":["/home/jose/Downloads/Challenge-2-Bot-Battlr/code-challenge/src/components/BotsPage.js"],"sourcesContent":["// src/components/BotsPage.js\nimport React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\nimport BotSpecs from \"./BotSpecs\";\n\nfunction BotsPage() {\n  const [bots, setBots] = useState([]);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const [botArmy, setBotArmy] = useState([]);\n\n  useEffect(() => {\n    // Fetch or initialize bots data here\n    const initialBots = [\n      { id: 1, name: \"Bot1\", description: \"Description1\", avatar_url: \"path/to/image1.jpg\", catchphrase: \"Catchphrase1\", bot_class: \"Assault\", health: 100, damage: 50, armor: 10 },\n      { id: 2, name: \"Bot2\", description: \"Description2\", avatar_url: \"path/to/image2.jpg\", catchphrase: \"Catchphrase2\", bot_class: \"Defender\", health: 150, damage: 20, armor: 30 }\n    ];\n    setBots(initialBots);\n  }, []);\n\n  const handleBotClick = (bot) => {\n    setSelectedBot(bot);\n  };\n\n  const handleEnlist = (bot) => {\n    setBotArmy([...botArmy, bot]);\n    setSelectedBot(null); // Optionally clear selected bot\n  };\n\n  return (\n    <div>\n      <YourBotArmy botArmy={botArmy} />\n      <BotCollection bots={bots} onBotClick={handleBotClick} />\n      {selectedBot && <BotSpecs bot={selectedBot} onEnlist={handleEnlist} />}\n    </div>\n  );\n}\n\nexport default BotsPage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,WAAW,GAAG,CAClB;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,MAAM;MAAEC,WAAW,EAAE,cAAc;MAAEC,UAAU,EAAE,oBAAoB;MAAEC,WAAW,EAAE,cAAc;MAAEC,SAAS,EAAE,SAAS;MAAEC,MAAM,EAAE,GAAG;MAAEC,MAAM,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAG,CAAC,EAC7K;MAAER,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,MAAM;MAAEC,WAAW,EAAE,cAAc;MAAEC,UAAU,EAAE,oBAAoB;MAAEC,WAAW,EAAE,cAAc;MAAEC,SAAS,EAAE,UAAU;MAAEC,MAAM,EAAE,GAAG;MAAEC,MAAM,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAG,CAAC,CAC/K;IACDd,OAAO,CAACK,WAAW,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,cAAc,GAAIC,GAAG,IAAK;IAC9Bd,cAAc,CAACc,GAAG,CAAC;EACrB,CAAC;EAED,MAAMC,YAAY,GAAID,GAAG,IAAK;IAC5BZ,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEa,GAAG,CAAC,CAAC;IAC7Bd,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,oBACEN,OAAA;IAAAsB,QAAA,gBACEtB,OAAA,CAACJ,WAAW;MAACW,OAAO,EAAEA;IAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjC1B,OAAA,CAACH,aAAa;MAACM,IAAI,EAAEA,IAAK;MAACwB,UAAU,EAAER;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACxDrB,WAAW,iBAAIL,OAAA,CAACF,QAAQ;MAACsB,GAAG,EAAEf,WAAY;MAACuB,QAAQ,EAAEP;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnE,CAAC;AAEV;AAACxB,EAAA,CA9BQD,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAgCjB,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}