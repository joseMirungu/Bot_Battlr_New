{"ast":null,"code":"var _jsxFileName = \"/home/jose/Downloads/Challenge-2-Bot-Battlr/code-challenge/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport BotCollection from \"./BotCollection\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [botArmy, setBotArmy] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8002/bots') // Updated to local URL\n    .then(res => res.json()).then(data => setBots(data)).catch(error => console.error('Error fetching data:', error)); // Added error handling\n  }, []);\n  const addBotToArmy = bot => {\n    if (!botArmy.some(b => b.id === bot.id)) {\n      setBotArmy([...botArmy, bot]);\n    }\n  };\n  const releaseBotFromArmy = bot => {\n    setBotArmy(botArmy.filter(b => b.id !== bot.id));\n  };\n  const dischargeBot = bot => {\n    fetch(`http://localhost:8002/bots/${bot.id}`, {\n      // Fixed URL syntax\n      method: 'DELETE'\n    }).then(() => {\n      setBots(bots.filter(b => b.id !== bot.id));\n      setBotArmy(botArmy.filter(b => b.id !== bot.id));\n    }).catch(error => console.error('Error deleting bot:', error)); // Added error handling\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      addBotToArmy: addBotToArmy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YourBotArmy, {\n      bots: botArmy,\n      releaseBotFromArmy: releaseBotFromArmy,\n      dischargeBot: dischargeBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"d+K5VIAavQRbiGkfY1a5I9Cs7oE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BotCollection","YourBotArmy","jsxDEV","_jsxDEV","App","_s","bots","setBots","botArmy","setBotArmy","fetch","then","res","json","data","catch","error","console","addBotToArmy","bot","some","b","id","releaseBotFromArmy","filter","dischargeBot","method","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jose/Downloads/Challenge-2-Bot-Battlr/code-challenge/src/components/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport BotCollection from \"./BotCollection\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport \"./style.css\";\n\nfunction App() {\n  const [bots, setBots] = useState([]);\n  const [botArmy, setBotArmy] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:8002/bots') // Updated to local URL\n      .then((res) => res.json())\n      .then((data) => setBots(data))\n      .catch((error) => console.error('Error fetching data:', error)); // Added error handling\n  }, []);\n\n  const addBotToArmy = (bot) => {\n    if (!botArmy.some((b) => b.id === bot.id)) {\n      setBotArmy([...botArmy, bot]);\n    }\n  };\n\n  const releaseBotFromArmy = (bot) => {\n    setBotArmy(botArmy.filter((b) => b.id !== bot.id));\n  };\n\n  const dischargeBot = (bot) => {\n    fetch(`http://localhost:8002/bots/${bot.id}`, { // Fixed URL syntax\n      method: 'DELETE',\n    })\n      .then(() => {\n        setBots(bots.filter((b) => b.id !== bot.id));\n        setBotArmy(botArmy.filter((b) => b.id !== bot.id));\n      })\n      .catch((error) => console.error('Error deleting bot:', error)); // Added error handling\n  };\n\n  return (\n    <div className=\"app\">\n      <BotCollection bots={bots} addBotToArmy={addBotToArmy} />\n      <YourBotArmy\n        bots={botArmy}\n        releaseBotFromArmy={releaseBotFromArmy}\n        dischargeBot={dischargeBot}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,4BAA4B,CAAC,CAAC;IAAA,CACjCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKP,OAAO,CAACO,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,YAAY,GAAIC,GAAG,IAAK;IAC5B,IAAI,CAACX,OAAO,CAACY,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKH,GAAG,CAACG,EAAE,CAAC,EAAE;MACzCb,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEW,GAAG,CAAC,CAAC;IAC/B;EACF,CAAC;EAED,MAAMI,kBAAkB,GAAIJ,GAAG,IAAK;IAClCV,UAAU,CAACD,OAAO,CAACgB,MAAM,CAAEH,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKH,GAAG,CAACG,EAAE,CAAC,CAAC;EACpD,CAAC;EAED,MAAMG,YAAY,GAAIN,GAAG,IAAK;IAC5BT,KAAK,CAAC,8BAA8BS,GAAG,CAACG,EAAE,EAAE,EAAE;MAAE;MAC9CI,MAAM,EAAE;IACV,CAAC,CAAC,CACCf,IAAI,CAAC,MAAM;MACVJ,OAAO,CAACD,IAAI,CAACkB,MAAM,CAAEH,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKH,GAAG,CAACG,EAAE,CAAC,CAAC;MAC5Cb,UAAU,CAACD,OAAO,CAACgB,MAAM,CAAEH,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKH,GAAG,CAACG,EAAE,CAAC,CAAC;IACpD,CAAC,CAAC,CACDP,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC;EACpE,CAAC;EAED,oBACEb,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBzB,OAAA,CAACH,aAAa;MAACM,IAAI,EAAEA,IAAK;MAACY,YAAY,EAAEA;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzD7B,OAAA,CAACF,WAAW;MACVK,IAAI,EAAEE,OAAQ;MACde,kBAAkB,EAAEA,kBAAmB;MACvCE,YAAY,EAAEA;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC3B,EAAA,CA1CQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}