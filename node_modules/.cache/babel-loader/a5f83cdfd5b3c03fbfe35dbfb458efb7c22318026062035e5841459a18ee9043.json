{"ast":null,"code":"var _jsxFileName = \"/home/jose/Downloads/Challenge-2-Bot-Battlr/code-challenge/src/components/BotsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport YourBotArmy from './YourBotArmy';\nimport BotCollection from './BotCollection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotsPage() {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [botArmy, setBotArmy] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch('http://localhost:8002/bots');\n        if (!response.ok) throw new Error('Network response was not ok');\n        const data = await response.json();\n        setBots(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n    fetchData();\n  }, []);\n  const handleAddToArmy = bot => {\n    setBotArmy(prevArmy => {\n      if (!prevArmy.some(b => b.id === bot.id)) {\n        return [...prevArmy, bot];\n      }\n      return prevArmy;\n    });\n  };\n  const handleRemoveFromArmy = botId => {\n    setBotArmy(prevArmy => prevArmy.filter(bot => bot.id !== botId));\n  };\n  const handleReleaseBot = async botId => {\n    try {\n      await fetch(`http://localhost:8002/bots/${botId}`, {\n        method: 'DELETE'\n      });\n      setBotArmy(prevArmy => prevArmy.filter(bot => bot.id !== botId));\n    } catch (error) {\n      console.error('Error deleting bot:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {\n      botArmy: botArmy,\n      onRemove: handleRemoveFromArmy,\n      onRelease: handleReleaseBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      onBotClick: handleAddToArmy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(BotsPage, \"d+K5VIAavQRbiGkfY1a5I9Cs7oE=\");\n_c = BotsPage;\nexport default BotsPage;\nvar _c;\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"names":["React","useState","useEffect","YourBotArmy","BotCollection","jsxDEV","_jsxDEV","BotsPage","_s","bots","setBots","botArmy","setBotArmy","fetchData","response","fetch","ok","Error","data","json","error","console","handleAddToArmy","bot","prevArmy","some","b","id","handleRemoveFromArmy","botId","filter","handleReleaseBot","method","children","onRemove","onRelease","fileName","_jsxFileName","lineNumber","columnNumber","onBotClick","_c","$RefreshReg$"],"sources":["/home/jose/Downloads/Challenge-2-Bot-Battlr/code-challenge/src/components/BotsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport YourBotArmy from './YourBotArmy';\nimport BotCollection from './BotCollection';\n\nfunction BotsPage() {\n  const [bots, setBots] = useState([]);\n  const [botArmy, setBotArmy] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch('http://localhost:8002/bots');\n        if (!response.ok) throw new Error('Network response was not ok');\n        const data = await response.json();\n        setBots(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  const handleAddToArmy = (bot) => {\n    setBotArmy((prevArmy) => {\n      if (!prevArmy.some((b) => b.id === bot.id)) {\n        return [...prevArmy, bot];\n      }\n      return prevArmy;\n    });\n  };\n\n  const handleRemoveFromArmy = (botId) => {\n    setBotArmy((prevArmy) => prevArmy.filter((bot) => bot.id !== botId));\n  };\n\n  const handleReleaseBot = async (botId) => {\n    try {\n      await fetch(`http://localhost:8002/bots/${botId}`, {\n        method: 'DELETE',\n      });\n      setBotArmy((prevArmy) => prevArmy.filter((bot) => bot.id !== botId));\n    } catch (error) {\n      console.error('Error deleting bot:', error);\n    }\n  };\n\n  return (\n    <div>\n      <YourBotArmy botArmy={botArmy} onRemove={handleRemoveFromArmy} onRelease={handleReleaseBot} />\n      <BotCollection bots={bots} onBotClick={handleAddToArmy} />\n    </div>\n  );\n}\n\nexport default BotsPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,eAAeW,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;QAC1D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChE,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCT,OAAO,CAACQ,IAAI,CAAC;MACf,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;IACAP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,eAAe,GAAIC,GAAG,IAAK;IAC/BX,UAAU,CAAEY,QAAQ,IAAK;MACvB,IAAI,CAACA,QAAQ,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKJ,GAAG,CAACI,EAAE,CAAC,EAAE;QAC1C,OAAO,CAAC,GAAGH,QAAQ,EAAED,GAAG,CAAC;MAC3B;MACA,OAAOC,QAAQ;IACjB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMI,oBAAoB,GAAIC,KAAK,IAAK;IACtCjB,UAAU,CAAEY,QAAQ,IAAKA,QAAQ,CAACM,MAAM,CAAEP,GAAG,IAAKA,GAAG,CAACI,EAAE,KAAKE,KAAK,CAAC,CAAC;EACtE,CAAC;EAED,MAAME,gBAAgB,GAAG,MAAOF,KAAK,IAAK;IACxC,IAAI;MACF,MAAMd,KAAK,CAAC,8BAA8Bc,KAAK,EAAE,EAAE;QACjDG,MAAM,EAAE;MACV,CAAC,CAAC;MACFpB,UAAU,CAAEY,QAAQ,IAAKA,QAAQ,CAACM,MAAM,CAAEP,GAAG,IAAKA,GAAG,CAACI,EAAE,KAAKE,KAAK,CAAC,CAAC;IACtE,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,oBACEd,OAAA;IAAA2B,QAAA,gBACE3B,OAAA,CAACH,WAAW;MAACQ,OAAO,EAAEA,OAAQ;MAACuB,QAAQ,EAAEN,oBAAqB;MAACO,SAAS,EAAEJ;IAAiB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9FjC,OAAA,CAACF,aAAa;MAACK,IAAI,EAAEA,IAAK;MAAC+B,UAAU,EAAElB;IAAgB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV;AAAC/B,EAAA,CAhDQD,QAAQ;AAAAkC,EAAA,GAARlC,QAAQ;AAkDjB,eAAeA,QAAQ;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}